name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_change.outputs.changed }}
      new_version: ${{ steps.get_version.outputs.version }}
      latest_tag: ${{ steps.latest_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Get latest tag
        id: latest_tag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "::set-output name=tag::$LATEST_TAG"
      - name: Check for version change
        id: version_change
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $LATEST_TAG"
          VERSION_CHANGE=$(git diff $LATEST_TAG HEAD -- package.json | grep '"version":')
          if [ "$VERSION_CHANGE" != "" ]; then
            echo "Version changed."
            echo "::set-output name=changed::true"
          else
            echo "No version change detected."
            echo "::set-output name=changed::false"
          fi
      - name: Get new version
        id: get_version
        if: steps.version_change.outputs.changed == 'true'
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

  build:
    needs: prepare
    if: needs.prepare.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist/

  release:
    needs: [prepare, build]
    if: needs.prepare.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.prepare.outputs.new_version }}
          release_name: Release v${{ needs.prepare.outputs.new_version }}
          draft: false
          prerelease: false
          body: 'Full Changelog: https://github.com/dg4-solid/solid.dgdgdgdg.com/compare/${{ needs.prepare.outputs.latest_tag }}...v${{ needs.prepare.outputs.new_version }}'
